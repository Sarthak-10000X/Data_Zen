# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rgdgSuHZ1td7JhwF28ExNpcsUoOTg20T
"""

# Commented out IPython magic to ensure Python compatibility.
from os import close
import pandas as pd
import numpy as np
import sklearn.preprocessing as sns
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import MinMaxScaler
from sklearn.metrics import mean_squared_error, r2_score


# %matplotlib inline

#reading the stock data
data=pd.read_csv("/content/StockData.csv")
print("size of data:", data.shape)
print("COLUMNS:", data.columns)
stockData=data.head()
stockData

#selecting required columns
df=stockData[['open','close','high','low','volume']]
df.head()

#scaling data for good and faster efficiency
minMax=MinMaxScaler()
df_minMaxScaled= pd.DataFrame(minMax.fit_transform(df[['open','close','high','low','volume']]), columns =['open MMS', 'close MMS','high MMS','low MMS','volume MMS'])
df_minMaxScaled.head()

#Splittin data for Training and Testing model
x=df_minMaxScaled.drop(columns='close MMS')
y=df_minMaxScaled['close MMS']

x_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.25,)

#Working with model
lr=LinearRegression()
lr.fit(x_train, y_train)
lr.score(x_test, y_test)*100

#Model Accuracy Matrics
y_pred=lr.predict(x_test)

mse=mean_squared_error(y_test, y_pred)
r2=r2_score(y_test, y_pred)

print("Mean-Square-Error:", mse*100)
print("r2_score:", r2*100)

#plotting the graph of result

plt.figure(figsize=(10,6))
plt.plot(y_test,label='Acutal price',linewidth=8)
plt.plot(y_test,label='Predicted price', linewidth=2)
plt.legend()
plt.show()